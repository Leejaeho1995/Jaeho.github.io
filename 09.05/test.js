const 예보='폭풍이 왔으니 조심하세요'
const 도망='얼른 도망가야겠다 !! =3 =3 =3'
const 폭풍='ㅋㅋㅋㅋ이미옴 앗! 늦었네'

//동기식 처리
// console.log(예보)
// console.log(도망)
// console.log(폭풍)
function delay(){
    for(let i=0; i<10000;i++);
}
function 탈출()
{
    delay();
    console.log(도망);
}
    //비동기식 처리
console.log(예보)
setTimeout(()=>{
    console.log(폭풍)
},1000)
console.log(탈출())

/*
1. setTimeout 함수가 콜스택에 추가된다.
2.콜 스택에 있던 setTimeout함수는 브라우저에 타이머 이벤트를 요청한 
콜 스택에서 제거되고 다음 코드인 예보함수가 콜스택에 추가된다.
3.예보 함수가 내부적으로 실행되는 도망함수를 콜 스택에 추가하고 함수에 작성된
코드가 실행된다. 동시에 타이머를 완료한 setTimeout함수는 콜백함수를 
테스크 큐에 추가한다.
4. 예보 함수와 도망 함수가 동작을 마치게 되면 콜스택이 비어있게 된다.
5. 콜 스택이 비어있는 것을 확인한 이벤트루프가 폭풍함수를 콜스택에 추가한다.
6. 폭풍함수가 모두 실행되면 코드가 종료된다.
 */